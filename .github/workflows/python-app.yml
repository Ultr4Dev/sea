name: Python package

on:
  push:
  pull_request:
  merge_group:
    types: [checks_requested]
jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11"]

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: test
        run: |
          pip install pytest pytest-cov
          export PYTHONPATH=$PYTHONPATH:$(pwd)
          pytest ./tests --doctest-modules --junitxml=junit/test-results.xml --cov=com --cov-report=xml --cov-report=html

  project-version-check:
    runs-on: ubuntu-latest
    env:
      branch_version: ""
      master_version: ""
    steps:
      - uses: actions/checkout@v4
      - name: Get version from setup.py
        id: get_version
        run: |
          echo "version=$(grep -oP 'version=\".*\"' setup.py | cut -d'\"' -f2)" >> $GITHUB_OUTPUT
      - uses: actions/checkout@v4
        with:
          ref: master
      - name: Get version from master
        id: get_master_version
        run: |
          echo "master_version=$(git show origin/master:setup.py | grep -oP 'version=\".*\"' | cut -d'\"' -f2)" >> $GITHUB_OUTPUT
      - name: Check version
        run: |
          echo "Branch version: ${{ steps.get_version.outputs.version }}"
          echo "Master version: ${{ steps.get_master_version.outputs.master_version }}"
          if [ "${{ steps.get_version.outputs.version }}" == "${{ steps.get_master_version.outputs.master_version }}" ]; then
            echo "Version in setup.py is equal to master version"
            exit 1
          fi
